% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yml_output.R
\name{yml_output}
\alias{yml_output}
\title{Caputure, validate, and write output YAML}
\usage{
yml_output(.yml, ...)
}
\arguments{
\item{.yml}{a \code{yml} object created by \code{yml()}, \code{as_yml()}, or passed through
a \code{yml_*()} function}

\item{...}{valid R code calling functions that return objects of class
\code{rmarkdown_output_format}, such as the \code{*_document()} functions in
rmarkdown.}
}
\value{
a \code{yml} object

a \code{yml} object
}
\description{
\code{yml_output()} writes valid YAML for the \code{output} field of R Markdown YAML.
\code{yml_output()} captures the actual output functions, such as
\code{pdf_document()}, and translates them to YAML. This function accepts multiple
output formats (separated by commas) and validates each by evaluating the
function internally. The fields in output-related YAML come from arguments in
their respective R functions. If you wanted to see the available fields in
\code{pdf_document()}, for instance, you would read the documentation for that
function using \code{?pdf_document}.
}
\examples{

yml() \%>\%
  yml_output(html_document())

yml() \%>\%
  yml_output(
    pdf_document(keep_tex = TRUE, includes = includes2(after_body = "footer.tex")),
    bookdown::html_document2()
  )

}
\seealso{
Other yml: \code{\link{bib2yml}},
  \code{\link{use_yml_defaults}},
  \code{\link{use_yml_file}}, \code{\link{yml_author}},
  \code{\link{yml_citations}},
  \code{\link{yml_latex_opts}}, \code{\link{yml_reference}}
}
\concept{yml}
